package HBML.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Door_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Floor_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new House_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new OuterSpace_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new Passage_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Room_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254d7aa11L), MetaIdFactory.conceptId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x7a62d4fd116b833dL), MetaIdFactory.conceptId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x7a62d4fd116b5067L), MetaIdFactory.conceptId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254df69eaL), MetaIdFactory.conceptId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254d7aa09L), MetaIdFactory.conceptId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed248fL)).seal();
}
