package HBML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDoor = createDescriptorForDoor();
  /*package*/ final ConceptDescriptor myConceptFloor = createDescriptorForFloor();
  /*package*/ final ConceptDescriptor myConceptHouse = createDescriptorForHouse();
  /*package*/ final ConceptDescriptor myConceptOuterSpace = createDescriptorForOuterSpace();
  /*package*/ final ConceptDescriptor myConceptPassage = createDescriptorForPassage();
  /*package*/ final ConceptDescriptor myConceptRoom = createDescriptorForRoom();
  /*package*/ final ConceptDescriptor myConceptSpace = createDescriptorForSpace();
  /*package*/ final EnumerationDescriptor myEnumerationDoorType = new EnumerationDescriptor_DoorType();
  /*package*/ final EnumerationDescriptor myEnumerationGroundType = new EnumerationDescriptor_GroundType();
  /*package*/ final EnumerationDescriptor myEnumerationOuterSpaceType = new EnumerationDescriptor_OuterSpaceType();
  /*package*/ final EnumerationDescriptor myEnumerationRoomType = new EnumerationDescriptor_RoomType();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeDate = new ConstrainedStringDatatypeDescriptorImpl(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x7a62d4fd116d6ea9L, "Date", "r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/8818845203729051305", "^([0-2][0-9]|(3)[0-1])(\\/)(((0)[0-9])|((1)[0-2]))(\\/)\\d{4}$");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDoor, myConceptFloor, myConceptHouse, myConceptOuterSpace, myConceptPassage, myConceptRoom, myConceptSpace);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Door:
        return myConceptDoor;
      case LanguageConceptSwitch.Floor:
        return myConceptFloor;
      case LanguageConceptSwitch.House:
        return myConceptHouse;
      case LanguageConceptSwitch.OuterSpace:
        return myConceptOuterSpace;
      case LanguageConceptSwitch.Passage:
        return myConceptPassage;
      case LanguageConceptSwitch.Room:
        return myConceptRoom;
      case LanguageConceptSwitch.Space:
        return myConceptSpace;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationDoorType, myEnumerationGroundType, myEnumerationOuterSpaceType, myEnumerationRoomType, myCSDatatypeDate);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDoor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HBML", "Door", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254d7aa11L);
    b.class_(false, false, false);
    b.super_("HBML.structure.Passage", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254d7aa09L);
    b.origin("r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/2537194009606466065");
    b.version(2);
    b.property("type", 0x2335ec8254d7aa12L).type(MetaIdFactory.dataTypeId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254d7a9fbL)).origin("2537194009606466066").done();
    b.property("width", 0x2335ec8254d7aa14L).type(MetaIdFactory.dataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L)).origin("2537194009606466068").done();
    b.property("height", 0x2335ec8254d7aa17L).type(MetaIdFactory.dataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L)).origin("2537194009606466071").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFloor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HBML", "Floor", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x7a62d4fd116b833dL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/8818845203728925501");
    b.version(2);
    b.property("level", 0x7a62d4fd116b8342L).type(PrimitiveTypeId.INTEGER).origin("8818845203728925506").done();
    b.aggregate("spaces", 0x1c4a0aa7eed248dL).target(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed2481L).optional(false).ordered(true).multiple(true).origin("127403343607571597").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHouse() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HBML", "House", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x7a62d4fd116b5067L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/8818845203728912487");
    b.version(2);
    b.property("state", 0x7a62d4fd116b50aaL).type(PrimitiveTypeId.STRING).origin("8818845203728912554").done();
    b.property("address", 0x7a62d4fd116b50acL).type(PrimitiveTypeId.STRING).origin("8818845203728912556").done();
    b.property("city", 0x7a62d4fd116b8332L).type(PrimitiveTypeId.STRING).origin("8818845203728925490").done();
    b.property("postalCode", 0x7a62d4fd116b8337L).type(PrimitiveTypeId.STRING).origin("8818845203728925495").done();
    b.property("buildingDate", 0x7a62d4fd116b50afL).type(MetaIdFactory.dataTypeId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x7a62d4fd116d6ea9L)).origin("8818845203728912559").done();
    b.aggregate("floors", 0x7a62d4fd116b8344L).target(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x7a62d4fd116b833dL).optional(false).ordered(true).multiple(true).origin("8818845203728925508").done();
    b.aggregate("passages", 0x2335ec8254e140c2L).target(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254d7aa09L).optional(true).ordered(true).multiple(true).origin("2537194009607094466").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOuterSpace() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HBML", "OuterSpace", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254df69eaL);
    b.class_(false, false, false);
    b.super_("HBML.structure.Space", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed2481L);
    b.origin("r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/2537194009606973930");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPassage() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HBML", "Passage", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x2335ec8254d7aa09L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/2537194009606466057");
    b.version(2);
    b.associate("spaceA", 0x2335ec8254d7aa0cL).target(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed2481L).optional(false).origin("2537194009606466060").done();
    b.associate("spaceB", 0x2335ec8254d7aa0eL).target(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed2481L).optional(false).origin("2537194009606466062").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoom() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HBML", "Room", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed248fL);
    b.class_(false, false, false);
    b.super_("HBML.structure.Space", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed2481L);
    b.origin("r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/127403343607571599");
    b.version(2);
    b.property("type", 0x1c4a0aa7eed2490L).type(MetaIdFactory.dataTypeId(0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed2492L)).origin("127403343607571600").done();
    b.property("height", 0x2335ec8254d7a9e0L).type(MetaIdFactory.dataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L)).origin("2537194009606466016").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSpace() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("HBML", "Space", 0xb0b8832625824427L, 0x889661f7684b0da0L, 0x1c4a0aa7eed2481L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:662f0f43-f4fc-4ca0-87f9-029b3756b650(HBML.structure)/127403343607571585");
    b.version(2);
    b.property("length", 0x1c4a0aa7eed248aL).type(MetaIdFactory.dataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L)).origin("127403343607571594").done();
    b.property("width", 0x2335ec8254d7a9e3L).type(MetaIdFactory.dataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L)).origin("2537194009606466019").done();
    return b.create();
  }
}
